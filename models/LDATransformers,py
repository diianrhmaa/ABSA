import numpy as np
from sklearn.base import BaseEstimator, TransformerMixin

### === LDA TOPIC PREDICTION CLASS === ###
class LDATopicPredictor(BaseEstimator, TransformerMixin):
    def __init__(self, lda_model, dictionary, tfidf_model):
        self.lda_model = lda_model
        self.dictionary = dictionary
        self.tfidf_model = tfidf_model

    def fit(self, X, y=None):
        return self

    def transform(self, X):
        bow_corpus = [self.dictionary.doc2bow(text.lower().split()) for text in X]
        tfidf_corpus = self.tfidf_model[bow_corpus]
        topic_predictions = [self.lda_model.get_document_topics(doc) for doc in tfidf_corpus]

        # Convert topic distribution to array
        topic_features = np.zeros((len(topic_predictions), self.lda_model.num_topics))
        for i, doc in enumerate(topic_predictions):
            for topic_id, prob in doc:
                topic_features[i, topic_id] = prob

        return topic_features